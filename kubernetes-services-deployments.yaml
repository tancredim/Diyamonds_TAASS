apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.service.nodeport.port: "30000"
        kompose.service.type: NodePort
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: api-gateway
      name: api-gateway
    spec:
      ports:
        - name: "8083"
          nodePort: 30000
          port: 8083
          targetPort: 8083
      selector:
        io.kompose.service: api-gateway
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      ports:
        - name: "8081"
          port: 8081
          targetPort: 8081
      selector:
        io.kompose.service: app
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: app2
      name: app2
    spec:
      ports:
        - name: "8082"
          port: 8082
          targetPort: 8082
      selector:
        io.kompose.service: app2
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: dbpostgresql
      name: dbpostgresql
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: dbpostgresql
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: dbpostgresql2
      name: dbpostgresql2
    spec:
      ports:
        - name: "5433"
          port: 5433
          targetPort: 5432
      selector:
        io.kompose.service: dbpostgresql2
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: eureka-server
      name: eureka-server
    spec:
      ports:
        - name: "8761"
          port: 8761
          targetPort: 8761
      selector:
        io.kompose.service: eureka-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq3
      name: rabbitmq3
    spec:
      ports:
        - name: "5672"
          port: 5672
          targetPort: 5672
        - name: "15672"
          port: 15672
          targetPort: 15672
      selector:
        io.kompose.service: rabbitmq3
    status:
      loadBalancer: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.service.nodeport.port: "30000"
        kompose.service.type: NodePort
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: api-gateway
      name: api-gateway
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: api-gateway
      strategy: { }
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.service.nodeport.port: "30000"
            kompose.service.type: NodePort
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: api-gateway
        spec:
          containers:
            - image: jerik99/diyamonds_taass-api-gateway
              name: api-gateway
              ports:
                - containerPort: 8083
              resources: { }
          restartPolicy: Always
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: app
      strategy: { }
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: app
        spec:
          containers:
            - env:
                - name: SPRING_DATASOURCE_PASSWORD
                  value: admin
                - name: SPRING_DATASOURCE_URL
                  value: jdbc:postgresql://dbpostgresql:5432/postgres
                - name: SPRING_DATASOURCE_USERNAME
                  value: postgres
                - name: SPRING_JPA_HIBERNATE_DDL_AUTO
                  value: update
              image: jerik99/diyamonds_taass-app
              name: diyamonds-backend-1
              ports:
                - containerPort: 8081
              resources: { }
          restartPolicy: Always
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: app2
      name: app2
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: app2
      strategy: { }
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: app2
        spec:
          containers:
            - env:
                - name: SPRING_DATASOURCE_PASSWORD
                  value: admin
                - name: SPRING_DATASOURCE_URL
                  value: jdbc:postgresql://dbpostgresql2:5432/postgres
                - name: SPRING_DATASOURCE_USERNAME
                  value: postgres
                - name: SPRING_JPA_HIBERNATE_DDL_AUTO
                  value: update
              image: jerik99/diyamonds_taass-app2
              name: diyamonds-backend-2
              ports:
                - containerPort: 8082
              resources: { }
          restartPolicy: Always
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: dbpostgresql
      name: dbpostgresql
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: dbpostgresql
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: dbpostgresql
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: postgres
                - name: POSTGRES_PASSWORD
                  value: admin
                - name: POSTGRES_USER
                  value: postgres
                - name: restart
                  value: unless-stopped
              image: postgres
              name: postgres
              ports:
                - containerPort: 5432
              resources: { }
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: db-data
          restartPolicy: Always
          volumes:
            - name: db-data
              persistentVolumeClaim:
                claimName: db-data
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: dbpostgresql2
      name: dbpostgresql2
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: dbpostgresql2
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: dbpostgresql2
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: postgres
                - name: POSTGRES_PASSWORD
                  value: admin
                - name: POSTGRES_USER
                  value: postgres
                - name: restart
                  value: unless-stopped
              image: postgres
              name: postgres-2
              ports:
                - containerPort: 5432
              resources: { }
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: db-data2
          restartPolicy: Always
          volumes:
            - name: db-data2
              persistentVolumeClaim:
                claimName: db-data2
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: eureka-server
      name: eureka-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: eureka-server
      strategy: { }
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: eureka-server
        spec:
          containers:
            - image: jerik99/diyamonds_taass-eureka-server
              name: eureka-server
              ports:
                - containerPort: 8761
              resources: { }
          restartPolicy: Always
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq3
      name: rabbitmq3
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: rabbitmq3
      strategy: { }
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
            kompose.version: 1.28.0 (c4137012e)
          creationTimestamp: null
          labels:
            io.kompose.network/diyamonds-taass-default: "true"
            io.kompose.service: rabbitmq3
        spec:
          containers:
            - image: rabbitmq:3.8-management-alpine
              name: rabbitmq
              ports:
                - containerPort: 5672
                - containerPort: 15672
              resources: { }
          restartPolicy: Always
    status: { }
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-data
      name: db-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: { }
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-data2
      name: db-data2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: { }
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: diyamonds-taass-default
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/diyamonds-taass-default: "true"
      podSelector:
        matchLabels:
          io.kompose.network/diyamonds-taass-default: "true"
kind: List
metadata: {}

